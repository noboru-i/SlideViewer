apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'com.google.gms.oss.licenses.plugin'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

apply from: "https://raw.githubusercontent.com/monstar-lab/gradle-android-ci-check/1.3.1/ci.gradle"

// CI
def isCi = "true".equals(System.getenv("CI"))
def preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    dataBinding {
        enabled = true
    }

    dexOptions {
        // Skip pre-dexing when running on CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !isCi
    }

    defaultConfig {
        applicationId "hm.orz.chaos114.android.slideviewer"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 32
        versionName "3.4.0"
        multiDexEnabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    signingConfigs {
        debug {
            storeFile rootProject.file("debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        releaseConfig {
            storeFile rootProject.file("keystore")
            storePassword System.getenv("STORE_PASSWORD")
            keyAlias "chaos114"
            keyPassword System.getenv("KEY_PASSWORD")
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
            zipAlignEnabled true
            applicationIdSuffix '.debug'
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            shrinkResources false
            debuggable false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }
    lintOptions {
        abortOnError false
    }
    dynamicFeatures = [":modules:ocr"]
}

dependencies {
    api project(':modules:infra')

    api 'com.android.support:multidex:1.0.3'
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"

    api "com.android.support:support-v4:${versions.supportLib}"
    api "com.android.support:customtabs:${versions.supportLib}"
    api "com.android.support:appcompat-v7:${versions.supportLib}"
    api "com.android.support:design:${versions.supportLib}"
    api "com.android.support:recyclerview-v7:${versions.supportLib}"

    api ('com.crashlytics.sdk.android:crashlytics:2.9.1@aar') {
        transitive = true
    }
    api 'com.google.firebase:firebase-core:16.0.0'
    api 'com.google.firebase:firebase-ads:15.0.1'
    api 'com.google.firebase:firebase-perf:16.0.0'

    api 'com.google.android.gms:play-services-oss-licenses:15.0.1'
    api 'com.google.android.play:core:1.2.0'

    api 'com.github.bumptech.glide:glide:4.5.0'
    api 'com.github.chrisbanes:PhotoView:2.1.3'

    api "io.reactivex.rxjava2:rxjava:${versions.rxJava}"
    api "io.reactivex.rxjava2:rxandroid:${versions.rxAndroid}"
    api "com.jakewharton.timber:timber:${versions.timber}"
    implementation 'com.jakewharton:process-phoenix:2.0.0'

    // dagger
    api "com.google.dagger:dagger:${versions.dagger}"
    api "com.google.dagger:dagger-android:${versions.dagger}"
    api "com.google.dagger:dagger-android-support:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${versions.dagger}"

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
}

apply plugin: 'com.google.gms.google-services'
